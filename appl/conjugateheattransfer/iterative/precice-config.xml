<?xml version="1.0"?>

<precice-configuration>
  <log>
    <sink type="stream" output="stdout"  filter= "(%Severity% > debug) or (%Severity% >= trace and %Module% contains SolverInterfaceImpl)"  enabled="false" /> 
    <sink type="stream" output="stdout"  enabled="false" /> 
  </log> 

  <solver-interface dimensions="2">

    <data:scalar name="Temperature"/>
    <data:scalar name="Heat-Flux"/>

    <mesh name="FreeFlowMesh">
      <use-data name="Temperature" />
      <use-data name="Heat-Flux" />
    </mesh>

    <mesh name="SolidEnergyMesh">
      <use-data name="Temperature" />
      <use-data name="Heat-Flux" />
    </mesh>

    <participant name="FreeFlow">
      <use-mesh name="FreeFlowMesh" provide="yes"/>
      <write-data name="Temperature" mesh="FreeFlowMesh"/>
      <write-data name="Heat-Flux" mesh="FreeFlowMesh"/>
    </participant>

    <participant name="SolidEnergy">
      <use-mesh name="FreeFlowMesh" from="FreeFlow"/>
      <use-mesh name="SolidEnergyMesh" provide="yes"/>
      
      <read-data name="Temperature" mesh="SolidEnergyMesh"/>
      <read-data name="Heat-Flux" mesh="SolidEnergyMesh"/>

      <mapping:nearest-neighbor direction="read" from="FreeFlowMesh" to="SolidEnergyMesh" constraint="consistent"/> 
      <!--
      <mapping:nearest-projection direction="read" from="FreeFlowMesh" to="SolidEnergyMesh" constraint="consistent"/>
    -->
      

    </participant>

    <m2n:sockets from="FreeFlow" to="SolidEnergy" distribution-type="gather-scatter" network="lo" exchange-directory="/tmp/coupling" />
    
    
    <coupling-scheme:parallel-explicit>
      <participants first="FreeFlow" second="SolidEnergy"/>
      <max-time value="100"/>
      <timestep-length value="1" />

      <exchange data="Temperature" mesh="FreeFlowMesh" from="FreeFlow" to="SolidEnergy" />
      <exchange data="Heat-Flux" mesh="FreeFlowMesh" from="FreeFlow" to="SolidEnergy" initialize="false" />
           
    </coupling-scheme:parallel-explicit>
  </solver-interface>
</precice-configuration>

